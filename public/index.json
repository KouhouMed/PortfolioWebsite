[{
    "title": "Supervised Learning algorithms with R",
    "date": "",
    "description": "We will discover some of the most common supervised learning algorithms and their implementation with R programming language",
    "body": "As I mentioned in an earlier post, machine learning algorithms are categorized into three main types :\n Supervised learning algorithms Unsupervised learning algorithms Reinfocement learning algorithms  In this article, we will only talk about some of machine learning supervised algorithms. We\u0026rsquo;ll also see examples using R programming language.\nFirst of all, I would like to remind you that supervised learning is a machine learning algorithm that tries to find a function mapping an input to a given output based on a set of examples. Basically, each of these examples (called training set) consists of the input $X$ and the desired output $Y$. In other words, we try to approximate the function $f$ such that $f(X)=Y$ using previously labelled data as learning examples. The performance of such a model is evaluated upon its ability to generalize onto new data that is unlabeled.\nK-Nearest Neighbours K-Nearest Neighbours (KNN) is a simple Machine Learning algorithm based on Supervised Learning technique. It can be used for both regression and classification, but it is mostly used in classification.\nSuppose we have two categories : Category $A$ and Category $B$, and we have a new data point $x$ that we want to know to which category it belongs.\n\rKNN algorithm is comprised of the following steps :\n Step 1 : Select K, number of neighbours Step 2 : Calculate the distance of between $x$ and each of the other data points (we can use the Euclidian distance or others) Step 3 : Take the K nearest neighbors as per the calculated Euclidean distance. Step 4 : Among these k neighbors, count the number of the data points in each category. Step 5 : Assign the new data points to that category for which the number of the neighbor is maximum.  NB 1 : The Euclidian distance between two points $a_1(x_1,y_1)$ and $a_2(x_2,y_2)$ is calculated as follows : $$d(a_1,a_2)=\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}$$\n\rA more general formula in an n-dimensional space is : $$d(x,y)=\\sqrt{\\sum_{i=1}^{n}(x_i-y_i)^2}$$ where $x(x_1,...,x_n)$ and $y(y_1,...,y_n)$.\rNB 2 : As can be seen, there are no parameters that need to be learned during training to determine whether a new observation belongs to class ùê¥ or ùêµ. The only parameter used in K-Nearest Neighbours is K, which is a predetermined value. The algorithm simply works by looking at the training samples, calculating distances and finding the K examples in the training set that are closest to the new observation. Thus, KNN is a non-parametric, supervised (needs training labels) learning algorithm.\nNB 3 : KNN does support categorical variables as features, simply because we cannot calculated the distance from them.\nThe hands-on example that we will work on will use the Sonar data set (signals) from mlbench library. Sonar is a system for the detection of objects under water and for measuring the water\u0026rsquo;s depth by emitting and detecting sound pulses (the complete description can be found ‚Üíhere). For our purposes, this is a two-class (class $R$ and class $M$) classification task with numeric data.\nFirst of all, let\u0026rsquo;s install the required libraries :\n# install the packages (note: this may take some time) install.packages(\u0026#34;class\u0026#34;) install.packages(\u0026#34;caret\u0026#34;) install.packages(\u0026#34;mlbench\u0026#34;) install.packages(\u0026#34;e1071\u0026#34;) library(class) library(caret) require(mlbench) library(e1071) library(base) require(base) Step 1 : Loading the data Let\u0026rsquo;s load the Sonar dataset and look at the first five rows :\ndata(Sonar) head(Sonar) Step 2 : Preparing and exploring the data nrow(Sonar) ncol(Sonar) This will display the number of lines (208 observations) and the number of columns (61 variables), all numerical except for the Class variable which is categorical.\nLet\u0026rsquo;s check how many $R$ classes and $M$ classes Sonar contains :\nbase::table(Sonar$Class) Now let\u0026rsquo;s see if it contains any NA values in its columns :\napply(Sonar, 2, function(x) sum(is.na(x))) We are going to manually split Sonar into training and test sets. Here, we will dedicate 70% of the dataset for traing, and the rest for testing :\nSEED \u0026lt;- 123 set.seed(SEED) data \u0026lt;- Sonar[base::sample(nrow(Sonar)), ] # shuffle data first bound \u0026lt;- floor(0.7 * nrow(data)) df_train \u0026lt;- data[1:bound, ] df_test \u0026lt;- data[(bound + 1):nrow(data), ] cat(\u0026#34;Number of training and test samples are \u0026#34;, nrow(df_train), nrow(df_test)) Now, let\u0026rsquo;s create the following dataframes :\nX_train \u0026lt;- subset(df_train, select=-Class) y_train \u0026lt;- df_train$Class X_test \u0026lt;- subset(df_test, select=-Class) # exclude Class for prediction y_test \u0026lt;- df_test$Class tep 3 : Training a model on data Now, we are going to use knn function from class library with $K=3$ :\nknn_model \u0026lt;- knn(train=X_train, test=X_test, cl=y_train, # class labels k=3) knn_model If you run the code above, you\u0026rsquo;ll see the prediction made by knn_model with $K=3$ on X_test.\nStep 4 : Evaluate the model performance In order to see how many classes have been correctly or incorrectly classified, we can create a confusion matrix as follows :\nconf_mat \u0026lt;- base::table(y_test, knn_model) conf_mat To compute the accuracy, we sum up all the correctly classified observations (located in diagonal) and divide it by the total number of classes :\ncat(\u0026#34;Accuracy: \u0026#34;, sum(diag(conf_mat))/sum(conf_mat)) To assess whether $K=3$ is a good choice and see whether $K=3$ leads to overfitting/underfitting the data, we could use knn.cv which does the leave-one-out cross-validations for training set (i.e., it singles out a training sample one at a time and tries to view it as a new example and see what class label it assigns).\nknn_loocv \u0026lt;- knn.cv(train=X_train, cl=y_train, k=3) knn_loocv Let\u0026rsquo;s create a confusion matrix to compute the accuracy of the training labels y_train and the cross-validated predictions knn_loocv, same as the above :\nconf_mat_cv \u0026lt;- base::table(y_train, knn_loocv) conf_mat_cv cat(\u0026#34;LOOCV accuracy: \u0026#34;, sum(diag(conf_mat_cv)) / sum(conf_mat_cv)) The difference between the cross-validated accuracy and the test accuracy shows that $K=3$ leads to overfitting. Perhaps we should change $K$ to lessen the overfitting.\nStep 5 : Improve the performance of the model There are a couple things we can do in order to improve the performance of our model :\n Centering and scaling data : these are forms of preprocessing numerical data (not suitable for categorical data). Centering a variable means subtracting the mean of the variable from each data point so that the new variable\u0026rsquo;s mean is 0. And scaling consists of multiplying each data point by a constant in order to alter the range of the data. Performing a cross-vaidation : this consists of dividing the data into a finite number of subsets. Through each iteration, a subset is set aside, and the remaining subsets are used as the training set. The subset that was set aside is used as the test set (prediction).  This is a method of cross-referencing the model built using its own data :\nSEED \u0026lt;- 2016 set.seed(SEED) # create the training data 70% of the overall Sonar data. in_train \u0026lt;- createDataPartition(Sonar$Class, p=0.7, list=FALSE) # create training indices ndf_train \u0026lt;- Sonar[in_train, ] ndf_test \u0026lt;- Sonar[-in_train, ] Here, we specify the cross-validation method we want to use to find the best $K$ in grid search.\n# lets create a function setup to do 5-fold cross-validation with 2 repeat. ctrl \u0026lt;- trainControl(method=\u0026#34;repeatedcv\u0026#34;, number=5, repeats=2) nn_grid \u0026lt;- expand.grid(k=c(1,3,5,7)) nn_grid set.seed(SEED) best_knn \u0026lt;- train(Class~., data=ndf_train, method=\u0026#34;knn\u0026#34;, trControl=ctrl, preProcess = c(\u0026#34;center\u0026#34;, \u0026#34;scale\u0026#34;), # standardize tuneGrid=nn_grid) best_knn Running the code above, you\u0026rsquo;ll find out that $K=1$ has the highest accuracy from repeated cross-validation.\n",
    "ref": "/blog/supervised-learning-algorithms-r/"
  },{
    "title": "What is machine learning ?",
    "date": "",
    "description": "Why is this field getting so much attention ? ü§î",
    "body": " \u0026ldquo;What we want is a machine that can learn from experience\u0026rdquo;\nAlan Turing, 1947\n What is machine learning ? Machine learning is a form of artificial intelligence (AI) that allows a system to learn from data without explicitly programming the instructions to be executed. However, machine learning is not a simple process. As the algorithms ingest the training data, it becomes possible to create more accurate models based on that data. A machine learning model is the output generated when you train your machine learning algorithm with data. After training, when you provide input data to a model, you receive an output result. For example, a predictive algorithm creates a predictive model. Then, when you provide data to the predictive model, you receive a forecast that is determined by the data that was used to train the model.\nIterative learning from data Machine learning allows models to train on datasets before being deployed. Some machine learning models are online and operate continuously. This iterative process of inline models improves the types of associations established between data elements. Due to their complexity and size, these trends and associations may not be detected by a human observer. Once a model has been trained, it can be used in real time to learn from the data. Improvements in accuracy result from the training and automation process that is part of machine learning.\nMachine learning approaches Machine learning techniques are needed to improve the accuracy of predictive models. Depending on the nature of the business problem being addressed, there are different approaches that vary depending on the type and volume of data. In this section, we discuss the categories of machine learning.\nSupervised learning Supervised learning usually begins with a well-defined data set and some understanding of how that data is classified. The goal of supervised learning is to uncover patterns in data and apply them to an analytical process. These data include characteristics associated with labels that define their meaning. You can, for example, create a machine learning application that can distinguish between millions of animals, based on pictures and written descriptions.\nUnsupervised learning Unsupervised learning is used when the problem requires a massive amount of unlabeled data. For example, social media apps like Twitter, Instagram, and Snapchat all mine very large amounts of untagged data. To understand the meaning of this data, it is necessary to use algorithms that classify the data according to the trends or clusters they detect. Unsupervised learning leads an iterative process, analyzing data without human intervention. It is used with spam detection technology sent by e-mail. Normal emails and spam have too many variables for an analyst to tag spam emails sent in bulk. In contrast, machine learning discriminants, based on clustering and association, are applied to identify unwanted emails.\nReinforcement learning Reinforcement learning is a model of behavioral learning. The algorithm receives feedback from the data analysis and guides the user to the best result. Reinforcement learning differs from other types of supervised learning in that the system is not trained with a sample data set. Instead, the system learns instead through a trial and error method. Therefore, a sequence of successful decisions results in the strengthening of the process, because it is the process that most effectively solves the problem at hand.\nNeural networks and deep learning  Deep learning is a specific method of machine learning that integrates neural networks in successive layers in order to learn data iteratively. Deep learning is especially useful when trying to spot trends from unstructured data. Complex deep learning neural networks are designed to emulate how the human brain works, so computers can be trained to deal with ill-defined abstractions and problems. Most five-year-olds easily distinguish the face of their teacher from that of the officer responsible for taking them across the crosswalk. On the other hand, the computer must do a considerable amount of work to identify each face. Neural networks and deep learning are often used in image recognition, oral communication and digital vision applications.\rMachine learning vs Statistical Modeling Statistical modeling and machine learning can be mixed up sometimes. But there is a difference between these two concepts. Machine Learning is an algorithm that can learn from data without being explicitly programmed or relying on standard programming practices. Here are some important facts about machine learning :\n Machine learning is a newer field of study than statistics (machine learning was invented in 1959, whereas statistics originated in the 17th century) Machine learning can result in more detailed information than statisticl modeling Machine learning is a subfield of computer science and A.I and contributes to building systems that can learn from data without explicit programming Finally, machine learning uses fewer assumptions than statistcal modeling  Statistical Modeling is the formalization of relationships between variables in the form of mathematical equations. It is a subfield of math that deals with finding relationships between variables to predict outcomes. It deals with a small amount of data with fewer attributes and, as such, there is a good chance that over-fitting will occur.\nStatistical modeling requires the modeller to understand the relation and implementation that a variable has on an equation, in an effort to best \u0026ldquo;estimate\u0026rdquo; the function output to a certain error.\nOn the other hand, machine Learning requires minimal human effort, as the workload involved in computing is placed squarely on the machine. Furthermore, Machine Learning has a strong predictive power, as the machine is \u0026ldquo;fit\u0026rdquo; and \u0026ldquo;trained\u0026rdquo; to find patterns in the data.\n    Machine Learning Statistical Modeling      Network, Graphs Model    Weights Parameters    Learning Fitting    Supervised Learning Regression/Classification    Unsupervised Learning Density Estimation/Clustering    ",
    "ref": "/blog/ml/"
  },{
    "title": "About Me",
    "date": "",
    "description": "Welcome to my website!üòÉ",
    "body": "‚Üí[CV] ‚Üê This website will give you an overview of my academic and professional career, as well as some of my interests. And you will also find some articles about different topics.\nI am a Data Engineering student in my 2nd year at the National Institute of Posts and Telecommunications, Rabat, Morocco.\nMy educational career was marked by a lot of moving between cities and compuses (Akka, Tata, Taroudant, Agadir, Rabat\u0026hellip;). And this made a significant contribution in the process of developping my personality, building my network, and acquiring a variety of skills.\nI had my baccalaureate in Mathematical Sciences in 2017 with an Honours degree at the Technical Highschool, Taroudant, Morocco. I then went to Mohammed Reda Slaoui Preparatory Classes in Agadir the same year and studied Maths And Physics for two years. In 2019, I went to the National Institute of Posts and Telecommunications in Rabat where I\u0026rsquo;m still studying Data Engineering in my 2nd year now.\nMain interests and projects My main interests are Data Science, Machine Learning, and Marketing Analysis. The first time I worked on a machine learning project was in my final year at the Preparatory Classes as part of the TIPE (Traveaux d\u0026rsquo;Initiative Personnelle Encadr√©s), in which I trained a convolutional neural network to guide a vehicle through an empty track. I used Udacity\u0026rsquo;s Self-Driving Car Simulator for generating the training and the testing data (TRAINING MODE), as well as for testing the performance of the car after I paired it with the trained model (AUTONOMOUS MODE).\nI had so much fun working on this project. I especially enjoyed the process of collecting data and testing the car on the simulator.\nI also carried out a web scrapping project in which I extracted around 13 000 items on the famous advertisements website Avito.ma using requests and BeautifulSoup and performed statistical studies on them.\nI love NLP (Natural Language Processing), and my latest mini-project was about determining, among a set of tweets, which relate to a disaster and which don\u0026rsquo;t, using NLP along with different machine learning algorithms, and then I compared the efficiency of each one of these algorithms.\nBadges and certificates I am glad that I had the chance to take many online courses in different domains especially those related to my area of expertise and earn a certificate for each one of them :\n   Badge/Certificate Date Issued by     Using Databases With Python November 2020 Coursera   R 101 November 2020 IBM   HCIA Big Data August 2020 Huawei   Natural Language Processing July 2020 Coursera (With Honors)   Scrum Foundation Professional Certificate (SFPC) August 2020 CertiProf   Lifelong Learning August 2020 CertiProf   HCIA Artificial Intelligence July 2020 Huawei   Data Science for Business - Level 1 May 2020 IBM   Data Science Orientation April 2020 IBM   Python For Data Science April 2020 IBM   Data Science Hands-On With Open Source Tools April 2020 IBM   Advanced Google Analytics April 2020 Google   Google Analytics For Beginners Mars 2020 Google    Extracurricular \u0026amp; Volunteering Experiences As an active member of CIT Club, I\u0026rsquo;ve proudly been part of the organization staff of its two main events (JNJD and IDEH) last year. And this year, I have been elected Treasurer of the club.\nI\u0026rsquo;ve also volunteered as an organizer of the 1st edition of the Digital Job Fair.\nHobbies and pastime activities I\u0026rsquo;m so passionate about photography üì∏ , music üé∂, and reading üìö\nThanks for passing by! üòÑ\nPlease feel free to contact me.\n",
    "ref": "/about/"
  },{
    "title": "What is Blockchain Technology?",
    "date": "",
    "description": "",
    "body": "MathJax Test $$\\int x^3 dx$$\nCode highlighting Test if(FALSE) { \u0026#34;This is a demo for multi-line comments and it should be put inside either a single OR double quote\u0026#34; } myString \u0026lt;- \u0026#34;Hello, World!\u0026#34; print ( myString) ",
    "ref": "/blog/blockchain/"
  },{
    "title": "Natural Language Processing (NLP)",
    "date": "",
    "description": "",
    "body": "Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n",
    "ref": "/blog/nlp/"
  },{
    "title": "What is Data Science ?",
    "date": "",
    "description": "Why Data Science? What are the prerequisites and skills for Data Science ? What is the lifecyle of a Data Science project? In this article, you will find the answers to these questions and more.",
    "body": " ‚ÄúYou can have data without information, but you cannot have information without data.‚Äù ‚Äì Daniel Keys Moran\n Data science is one of the most debated topics in the industries these days. Its popularity has grown over the years, and companies have started implementing data science techniques to grow their business and increase customer satisfaction. According to a study conducted in 2013, 90% of the world\u0026rsquo;s data has been produced within the previous two years. In 2020, the global amount of data is projected to reach 59 zettabytes. Given the massive amount of data that is being created every second, people in almost all industries have become concerned as to how to make use of all this data being produced. This is when Data Science comes into play.\nWhat is Data Science ? Data science is the domain of study that deals with vast volumes of data using modern tools and techniques to find unseen patterns, derive meaningful information, and make business decisions. Data science uses complex machine learning algorithms to build predictive models.\n \u0026ldquo;Data Scientist (n.): Person who is better at statistics than any software engineer and better at software engineering than any statistician.\u0026rdquo; ‚Äì Josh Wells\n \rData science combines the scientific method, math and statistics, specialized programming, advanced analytics, AI, and even storytelling to uncover and explain the business insights buried in data.It envolves preparing raw data to make it ready for processing, performing data analysis, and presenting the results to reveal patterns abd enable stakeholders to extract useful insights.\nData preparation envolves cleaning, aggregating, and manipulating data in a way that makes it suitable for the desired type of processing. As for analysis, it is requires algorithms and AI models to explore the data and extract patterns. Decisions will be taken based on the predictions that have been with the models.\nIn order for these models to be able to predict reliably, they have to be optimized through training. And the accuracy of the predictions must be validated through scientifically designed tests and experiments.\nWhat are the prerequisites and skills for Data Science ? a data scientist must be able to do the following tasks :\n Apply mathematics, statistics, and the scientific method Use a variety of tools and techniques for evaluating and preparing data (SQL, data mining, data integration methods\u0026hellip;) Extract insights from data using predictive analytics and artificial intelligence (AI), including machine learning and deep learning models Write applications that automate data processing and calculations Tell stories that clearly depict the results of the analysis process (this is usually done through visualization and other techniques) Explain how these results can be used to solve business problems  Technical prerequisites for Data Science Here are some technical demands you should know before setting of a data science journey :\n  Mathematics : data science requires some basic knowledge in certain mathematical concepts such as calculus, linear algebra, probability, statistics, information theory\u0026hellip; data scientists should be familiar with these concepts in order to be able to fully understand the magic behind statistical and machine learning models, and thus be capable of adapting them to their needs.\n  Programming : some programming skills are needed to execute successful data science projects. It is not required to be a hardcore programmer to help analyze widespread parts of data, to write quotes efficiently to explain the problem area and work with big data. Data science works on programming tools like Python and R. These concepts will help the candidate to journey a long way into the expertise of data science.\n  Databases : they are an essential component of data science. Data scientists need to understand how databases work, how to manage them, and how to extract data from them.\n  Machine learning : it is one of the most fundamental concepts of data science. Data Scientists need to have a solid grasp on ML in addition to basic knowledge of statistics.\n     Field Skills Tools     Data Analysis R, Python, Statistics SAS, Jupyter, R Studio, MATLAB, Excel, RapidMiner   Data Warehousing ETL, SQL, Hadoop, Apache Spark Informatica/ Talend, AWS Redshift   Data Visualization R, Python libraries Jupyter, Tableau, Cognos, RAW   Machine Learning Python, Algebra, Machine learning algorithms, Statistics Spark MLib, Mahout, Azure ML studio    \rRange of Technologies Brands in Data Science\r\rData Science Lifecycle \rData Science Lifecycle\r\rData science projects are conducted through several processes, so it is important to have a general structure to follow. There are no rules or stricts procedures to follow in a data science project. However, the following lifecycle outlines the major stages that projects typically execute, often iteratively:\n Business Understanding : This is the first step of all data science projects. It includes two main tasks :   Define objectives: Work with your customer and other stakeholders to understand and identify the business problems. Formulate questions that define the business goals that the data science techniques can target. Identify data sources: Find the relevant data that helps you answer the questions that define the objectives of the project.   Data Collection : It is not an easy process. It involves so many tasks such as identifying your data requirements, deciding on a method of data collection, and finally organizing a data collection plan that synthesizes the most important aspects of your program.\n  Data Preparation : This step is also known as Data Cleaning or Data Wrangling. It includes steps like selecting the relevant data, integrating the data by merging the data sets, cleaning it, handling the missing values by either removing them or imputing them with relevant data, treating erroneous data by removing them, also check for outliers and handle them. Constructing new data, derive new features from existing ones by using the feature engineering. Format the data into the desired structure, remove unwanted columns and features. Data preparation is the most time consuming as it takes up to 80% of the overall project time, yet it‚Äôs the most important step in the entire life cycle.\n  Exploratory Data Analysis (EDA) : This is not a formal process with a strict set of rules. It is rather a mindset that incites you to analyze and investigate your data sets and summarize their main characteristics, often employing data visualization methods. It helps you to figure out the best way to manipulate your data. In this stage, you may want to do the following tasks :\n   Generate questions about your data Search for answers by visualising, transforming, and modelling your data Use what you learn to refine your questions and/or generate new questions   Modeling : Data modeling is the process of creating a visual representation of either a whole information system or parts of it to communicate connections between data points and structures. The goal is to illustrate the types of data used and stored within the system, the relationships among these data types, the ways the data can be grouped and organized and its formats and attributes.Data modeling employs standardized schemas and formal techniques. This provides a common, consistent, and predictable way of defining and managing data resources across an organization, or even beyond.\n  Model Evaluation : In the end we need to evaluate the model by measuring the accuracy (How well the model performs i.e. does it describe the data accurately) and relevance (Does it answer the original question that is set out to answer). We also need to make sure there is a correct balance between performance and generalizability, which means the model created should not be biased and should be a generalized model.\n  Model Deployment : In order to start using a model for practical decision-making, it needs to be effectively deployed into production. Depending on the requirements, the deployment phase can be as simple as generating a report or as complex as implementing a repeatable data science process. In many cases, it will be the customer, not the data analyst, who will carry out the deployment steps. For example, a credit card company may want to deploy a trained model or set of models (e.g., neural networks, meta-learner) to quickly identify transactions, which have a high probability of being fraudulent. However, even if the analyst will not carry out the deployment effort it is important for the customer to understand up front what actions will need to be carried out in order to actually make use of the created models.\n  Conclusion In the end, we won\u0026rsquo;t be wrong to say that Data Science is driving the future of almost all industries as it is the fastest growing discipline in computer science and IT with all its active community and the new tools being developped continuously.\n",
    "ref": "/blog/ds/"
  }]
